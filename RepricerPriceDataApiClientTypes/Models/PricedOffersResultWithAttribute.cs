// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace RepricerPriceDataApiClientTypes.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class PricedOffersResultWithAttribute
    {
        /// <summary>
        /// Initializes a new instance of the PricedOffersResultWithAttribute
        /// class.
        /// </summary>
        public PricedOffersResultWithAttribute()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PricedOffersResultWithAttribute
        /// class.
        /// </summary>
        public PricedOffersResultWithAttribute(int totalUsedFbaOffers, int totalNewFbaOffers, int totalColFbaOffers, int totalRefFbaOffers, int totalClubFbaOffers, int totalUsedMerchantOffers, int totalNewMerchantOffers, int totalColMerchantOffers, int totalRefMerchantOffers, int totalClubMerchantOffers, double itemListPrice, bool hasMerchantIdForSelfCondition, string asin = default(string), string itemSku = default(string), IList<SalesRank> salesRankList = default(IList<SalesRank>), IList<PricedOfferWithAttribute> lowestUsedOffers = default(IList<PricedOfferWithAttribute>), IList<PricedOfferWithAttribute> lowestNewOffers = default(IList<PricedOfferWithAttribute>), IList<PricedOfferWithAttribute> lowestColOffers = default(IList<PricedOfferWithAttribute>), IList<PricedOfferWithAttribute> lowestRefOffers = default(IList<PricedOfferWithAttribute>), IList<PricedOfferWithAttribute> lowestClubOffers = default(IList<PricedOfferWithAttribute>))
        {
            Asin = asin;
            ItemSku = itemSku;
            TotalUsedFbaOffers = totalUsedFbaOffers;
            TotalNewFbaOffers = totalNewFbaOffers;
            TotalColFbaOffers = totalColFbaOffers;
            TotalRefFbaOffers = totalRefFbaOffers;
            TotalClubFbaOffers = totalClubFbaOffers;
            TotalUsedMerchantOffers = totalUsedMerchantOffers;
            TotalNewMerchantOffers = totalNewMerchantOffers;
            TotalColMerchantOffers = totalColMerchantOffers;
            TotalRefMerchantOffers = totalRefMerchantOffers;
            TotalClubMerchantOffers = totalClubMerchantOffers;
            ItemListPrice = itemListPrice;
            HasMerchantIdForSelfCondition = hasMerchantIdForSelfCondition;
            SalesRankList = salesRankList;
            LowestUsedOffers = lowestUsedOffers;
            LowestNewOffers = lowestNewOffers;
            LowestColOffers = lowestColOffers;
            LowestRefOffers = lowestRefOffers;
            LowestClubOffers = lowestClubOffers;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Asin")]
        public string Asin { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ItemSku")]
        public string ItemSku { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalUsedFbaOffers")]
        public int TotalUsedFbaOffers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalNewFbaOffers")]
        public int TotalNewFbaOffers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalColFbaOffers")]
        public int TotalColFbaOffers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalRefFbaOffers")]
        public int TotalRefFbaOffers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalClubFbaOffers")]
        public int TotalClubFbaOffers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalUsedMerchantOffers")]
        public int TotalUsedMerchantOffers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalNewMerchantOffers")]
        public int TotalNewMerchantOffers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalColMerchantOffers")]
        public int TotalColMerchantOffers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalRefMerchantOffers")]
        public int TotalRefMerchantOffers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalClubMerchantOffers")]
        public int TotalClubMerchantOffers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ItemListPrice")]
        public double ItemListPrice { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HasMerchantIdForSelfCondition")]
        public bool HasMerchantIdForSelfCondition { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalesRankList")]
        public IList<SalesRank> SalesRankList { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LowestUsedOffers")]
        public IList<PricedOfferWithAttribute> LowestUsedOffers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LowestNewOffers")]
        public IList<PricedOfferWithAttribute> LowestNewOffers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LowestColOffers")]
        public IList<PricedOfferWithAttribute> LowestColOffers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LowestRefOffers")]
        public IList<PricedOfferWithAttribute> LowestRefOffers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LowestClubOffers")]
        public IList<PricedOfferWithAttribute> LowestClubOffers { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SalesRankList != null)
            {
                foreach (var element in SalesRankList)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (LowestUsedOffers != null)
            {
                foreach (var element1 in LowestUsedOffers)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
            if (LowestNewOffers != null)
            {
                foreach (var element2 in LowestNewOffers)
                {
                    if (element2 != null)
                    {
                        element2.Validate();
                    }
                }
            }
            if (LowestColOffers != null)
            {
                foreach (var element3 in LowestColOffers)
                {
                    if (element3 != null)
                    {
                        element3.Validate();
                    }
                }
            }
            if (LowestRefOffers != null)
            {
                foreach (var element4 in LowestRefOffers)
                {
                    if (element4 != null)
                    {
                        element4.Validate();
                    }
                }
            }
            if (LowestClubOffers != null)
            {
                foreach (var element5 in LowestClubOffers)
                {
                    if (element5 != null)
                    {
                        element5.Validate();
                    }
                }
            }
        }
    }
}
