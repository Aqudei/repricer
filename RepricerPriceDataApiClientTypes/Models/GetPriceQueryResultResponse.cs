// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace RepricerPriceDataApiClientTypes.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class GetPriceQueryResultResponse
    {
        /// <summary>
        /// Initializes a new instance of the GetPriceQueryResultResponse
        /// class.
        /// </summary>
        public GetPriceQueryResultResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GetPriceQueryResultResponse
        /// class.
        /// </summary>
        public GetPriceQueryResultResponse(int priceQueryResultStatusId, bool isSuccessful, int errorCode, IList<SubApiItemReadResult> asinPriceResults = default(IList<SubApiItemReadResult>), string errorMsg = default(string))
        {
            PriceQueryResultStatusId = priceQueryResultStatusId;
            AsinPriceResults = asinPriceResults;
            IsSuccessful = isSuccessful;
            ErrorMsg = errorMsg;
            ErrorCode = errorCode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PriceQueryResultStatusId")]
        public int PriceQueryResultStatusId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AsinPriceResults")]
        public IList<SubApiItemReadResult> AsinPriceResults { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsSuccessful")]
        public bool IsSuccessful { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ErrorMsg")]
        public string ErrorMsg { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ErrorCode")]
        public int ErrorCode { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AsinPriceResults != null)
            {
                foreach (var element in AsinPriceResults)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
